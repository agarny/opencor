name: ci

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build and test (Windows release)
            os: windows-2019
            mode: Release
          - name: Build and test (Windows debug)
            os: windows-2019
            mode: Debug
          - name: Build and test (Linux release)
            os: ubuntu-20.04
            mode: Release
          - name: Build and test (Linux debug)
            os: ubuntu-20.04
            mode: Debug
          - name: Build and test (macOS release)
            os: macos-12
            mode: Release
          - name: Build and test (macOS debug)
            os: macos-12
            mode: Debug
    env:
      BUILDCACHE_COMPRESS_FORMAT: ZSTD
      BUILDCACHE_DEBUG: -1
      BUILDCACHE_DIRECT_MODE: true
      BUILDCACHE_LOG_FILE: ""
    steps:
      - name: Check out OpenCOR
        uses: actions/checkout@v3
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.12.12'
          setup-python: 'false'
      - name: Install packages (Linux only)
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt install libglu1-mesa
      - name: Install buildcache
        uses: mikehardy/buildcache-action@v2
        with:
          cache_key: ${{ matrix.os }}-${{ matrix.mode }}
      - name: Cache external dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/ext
          key: ${{ matrix.os }}-${{ matrix.mode }}-ExternalDependencies-${{ github.sha }}
          restore-keys: ${{ matrix.os }}-${{ matrix.mode }}-ExternalDependencies
      - name: Build and test OpenCOR
        run: scripts/genericci ${{ matrix.mode }}
  doc:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Documentation (Windows)
            os: windows-2019
          - name: Documentation (Linux)
            os: ubuntu-20.04
          - name: Documentation (macOS)
            os: macos-12
    steps:
      - name: Check out OpenCOR
        uses: actions/checkout@v2
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Sphinx
        run: pip install Sphinx sphinx_copybutton sphinx_inline_tabs
      - name: Generate the documentation
        run: ./cd
